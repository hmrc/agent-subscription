# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~
include "backend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.agentsubscription.wiring.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

play.http.router = prod.Routes


appName = agent-subscription

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"

# Service Locator Registration.
appUrl = "https://agent-subscription.protected.mdtp"

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsLogging = false
    needsAuditing = false
  }
  uk.gov.hmrc.api.controllers.DocumentationController = {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsubscription.controllers.api.DocumentationController {
    needsAuditing = false
    needsLogging = false
  }


  uk.gov.hmrc.agentsubscription.controllers.sandbox.SandboxSubscriptionController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsubscription.controllers.RegistrationController {
    needsAuditing = false
    needsLogging = true
  }

  uk.gov.hmrc.agentsubscription.controllers.SubscriptionController {
    needsAuditing = false
    needsLogging = true
  }
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}


# Microservice specific config

auditing {
  enabled = false
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

api.access {
  type = PRIVATE
  white-list.applicationIds = [00010002-0003-0004-0005-000600070008, 00090002-0003-0004-0005-000600070008]
}


microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
      legacy = false
    }
  }
  services {
    auth {
      host = localhost
      port = 8500
    }
    des {
      host = localhost
      port = 9009 #agent-external-stubs
      authorization-token = secret
      environment = test
    }
    tax-enrolments {
      host = localhost
      port = 9995
    }
    enrolment-store-proxy {
      host = localhost
      port = 7775
    }
    agent-assurance {
      host = localhost
      port = 9565
    }
    agent-overseas-application {
      host = localhost
      port = 9406
    }
    citizen-details{
      host = localhost
      port = 9337
    }
    email {
      host = localhost
      port = 8300
    }
    agent-mapping {
      host=localhost
      port=9439
    }
  }
}
  mongodb {
    uri = "mongodb://localhost:27017/agent-subscription?rm.monitorRefreshMS=4000&rm.failover=default"
    subscriptionjourney {
      ttl = 2592000
    }
  }
